% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimalw.R
\name{optimalw}
\alias{optimalw}
\title{Optimiser to maximize Expected Utility}
\usage{
optimalw(
  initial_values,
  upper_bounds,
  lower_bounds,
  ret_age,
  cc,
  c2,
  nu2,
  nu3,
  ra,
  delta,
  alpha,
  beta,
  c_age,
  gender,
  gender_mortalityTable,
  w0,
  CF,
  li,
  lg,
  c1,
  s1,
  s2,
  s3,
  w2,
  rho2,
  rho3,
  ret,
  retr,
  psi,
  verbose = FALSE,
  warnings = FALSE,
  trace = 0
)
}
\arguments{
\item{initial_values}{Starting values c(w3)}

\item{upper_bounds}{Upper bounds for optimization}

\item{lower_bounds}{Lower bounds for optimization}

\item{...}{all other parameters}
}
\value{
Expected utility
}
\description{
Here we minimize negative expected utility (given by function `util`). Parameters can be fixed by setting "tight" boundaries.
}
\examples{

data(ret);data(retr)
.load_parameters(gend=0,type=1)
initial_values <- c(0.25, 0.25, 0.25)
upper_bounds <- c(2, 3, 4)
lower_bounds <- c(-2, -2, -2)
outw <- optimalw(initial_values,upper_bounds,lower_bounds,ret_age=ret_age,cc=cc,c2=c2,nu2=nu2,nu3=nu3,
         ra=ra,delta=delta,alpha=aalpha,beta=bbeta,c_age=c_age,gender=gender,gender_mortalityTable=gender_mortalityTable,
         w0=w0,CF=CF,li=li,lg=lg,c1=c1,s1=s1,s2=s2,s3=s3,w2=w2,rho2=rho2,rho3=rho3,ret=ret[,,1:10],retr=retr[,,1:10],psi=psi,trace=0)
outw \%>\% tibble::rownames_to_column() \%>\% as_tibble \%>\% arrange (value) \%>\% filter(convcode==0,kkt1==TRUE,kkt2==TRUE)
util(ret_age=ret_age,c=cc,c2=c2,nu2=nu2,nu3=nu3,tw3=unlist(outw["Nelder-Mead",1:3]),
         ra=ra,delta=delta,alpha=aalpha,beta=bbeta,c_age=c_age,gender=gender,gender_mortalityTable=gender_mortalityTable,
         w0=w0,CF=CF,li=li,lg=lg,c1=c1,s1=s1,s2=s2,s3=s3,w2=w2,rho2=rho2,rho3=rho3,ret=ret[,,1:10],retr=retr[,,1:10],psi=psi)

}
